# Stage 1: Collect mediamtx binaries
FROM --platform=$BUILDPLATFORM alpine:3.22 AS mediamtx-binaries
ARG TARGETPLATFORM=linux/amd64
RUN apk add --no-cache tar
ADD mediamtx_*_${TARGETPLATFORM#linux/}.tar.gz /work/
# Stage 2: Build mediamtx-path-viewer (UI)
FROM golang:1.24-alpine AS ui-builder
WORKDIR /app
COPY ./mediamtx-path-viewer/go.mod ./mediamtx-path-viewer/go.sum ./
RUN go mod download && go mod verify
COPY ./mediamtx-path-viewer/ .
RUN go build -v -o /app/mediamtx-path-viewer -ldflags "-X 'main.gitBranch=main' -X 'main.gitTag=dev' -X 'main.gitRevision=local'"

# Stage 3: Final container
FROM alpine:3.22

RUN apk add --no-cache ffmpeg bash

# Copy mediamtx binary for this platform
ARG TARGETPLATFORM
COPY --from=mediamtx-binaries /work/mediamtx /usr/local/bin/mediamtx

# Copy UI binary
COPY --from=ui-builder /app/mediamtx-path-viewer /usr/local/bin/mediamtx-path-viewer

# Copy config if you have one
COPY mediamtx.yml /etc/mediamtx.yml

# Environment variables
ENV MEDIAMTX_API_URL=http://localhost:9997 \
    MEDIAMTX_API_PORT=9997 \
    MEDIAMTX_WEBRTC_URL=http://localhost:8889 \
    MEDIAMTX_HLS_URL=http://localhost:8888 \
    APP_PORT=8085 \
    MEDIAMTX_USERNAME=mitch \
    MEDIAMTX_PASSWORD=changeme

EXPOSE 8554 8888 8889 1935 8085 9997

# Entrypoint: run both mediamtx and UI
CMD ["/bin/sh", "-c", "/usr/local/bin/mediamtx /etc/mediamtx.yml & exec /usr/local/bin/mediamtx-path-viewer"]
